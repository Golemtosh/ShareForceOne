@model ShareForceOne.Models.TripModel
@using ShareForceOne.Controllers;
@{
    ViewData["Title"] = "TripDetails";
}


<div border: 1px solid #000000">
    <div id="trip_show_map"></div>
</div>
<script>
                function initMap() {

                    let markersArray = [];

                    var posStart = { lat: @TripController.GetLatFromId(Model.TripStartCoord), lng: @TripController.GetLonFromId(Model.TripStartCoord) };
                    var posStop = { lat: @TripController.GetLatFromId(Model.TripStopCoord), lng: @TripController.GetLonFromId(Model.TripStopCoord) };

                    var map = new google.maps.Map(document.getElementById('trip_show_map'), {
                        zoom: 13,
                        center: { lat: @TripController.GetLatFromId(Model.TripStartCoord), lng: @TripController.GetLonFromId(Model.TripStartCoord) }
                    });

                    var directionsService = new google.maps.DirectionsService();
                    var directionsRenderer = new google.maps.DirectionsRenderer();

                    directionsRenderer.setMap(map);

                    calculateAndDisplayRoute(directionsService, directionsRenderer);

                    //Name fetch
                    //var geocoder = new google.maps.Geocoder;

                    //geocoder.geocode({ 'location': posStart }, function (results, status)
                    //{
                    //    if (status === 'OK')
                    //    {
                    //        if (results[0])
                    //        {
                    //            document.getElementById('startCoordInput').innerHTML = results[0].formatted_address;
                    //        }
                    //        else
                    //        {
                    //            window.alert('No results found');
                    //        }
                    //    }
                    //    else
                    //    {
                    //      window.alert('Geocoder failed due to: ' + status);
                    //    }
                    //});
                    //geocoder.geocode({ 'location': posStop }, function (results, status)
                    //{
                    //    if (status === 'OK')
                    //    {
                    //        if (results[0])
                    //        {
                    //            document.getElementById('stopCoordInput').innerHTML = results[0].formatted_address;
                    //        }
                    //        else
                    //        {
                    //            window.alert('No results found');
                    //        }
                    //    }
                    //    else
                    //    {
                    //      window.alert('Geocoder failed due to: ' + status);
                    //    }
                    //});
                    // ENd Name

                    function calculateAndDisplayRoute(directionsService, directionsRenderer) {
                        directionsService.route(
                            {
                                origin: posStart,
                                destination: posStop,
                                travelMode: 'DRIVING'
                            },
                            function (response, status) {
                                if (status === 'OK') {
                                    directionsRenderer.setDirections(response);

                                } else {
                                    window.alert('Directions request failed due to ' + status);
                                }
                            });
                    }
                            //markersArray.push(marker);
                }


</script>
@*<script src="~/js/TripShow.js" asp-append-version="true"></script>*@

<div>
    <h4>Info</h4>
    <hr />
    <dl class="row" style="border: 1px solid #000000">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripCarId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripCarId)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripStartName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripStartName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripStopName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripStopName)
        </dd>

        @*<dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripStartCoord)
        </dt>
        <dd class="col-sm-10">
            <label id="startCoordInput">none</label>
        </dd>*@
        @*<dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripStartCoord)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripStartCoord)
        </dd>*@
        @*<dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripStopCoord)
        </dt>
        <dd class="col-sm-10">
            <label id="stopCoordInput">none</label>
        </dd>*@
        @*<dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripStopCoord)
        </dd>*@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripCreator)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripCreator)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripKMCost)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripKMCost)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripDateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripDateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripCarSeats)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripCarSeats)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripAnimals)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripAnimals)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TripInfoText)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TripInfoText)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.TripId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>



<script async defer src="@Keys.GoogleApiKey()"></script>
