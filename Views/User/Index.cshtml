@using ShareForceOne;

@{
    ViewData["Title"] = "Index";
}
<div>
    <div class="container">
        <div class="row">
            <div class="col-md-6 align-self-center" style="padding: 8px;"><a class="btn btn-primary btn-block border rounded" role="button" asp-area="" asp-controller="Trip" asp-action="TripCreate">Create</a></div>
            <div class="col-md-6" style="padding: 8px;"><button class="btn btn-primary btn-block border rounded" type="button">Button</button></div>
        </div>
    </div>
</div>
<div class="container" id="floating-panel">
    <div class="row">
        <div class="col-md-4 align-self-center" style="padding: 8px;">
            <button class="btn btn-primary btn-block border rounded" type="button" onclick="clearMarkers();">Hide Marker</button>
        </div>
        <div class="col-md-4 align-self-center" style="padding: 8px;">
            <button class="btn btn-primary btn-block border rounded" type="button" onclick="showMarkers();">Show Marker</button>
        </div>
        <div class="col-md-4 align-self-center" style="padding: 8px;">
            <button class="btn btn-primary btn-block border rounded" type="button" onclick="deleteMarkers();">Delete Marker</button>
        </div>
    </div>
</div>
<div class="container" id="floating-panel">
    <div class="row">

        <div class="col-md-12 align-self-center" style="padding: 8px;">
            <button class="btn btn-primary btn-block border rounded" type="button" onclick="">Calc</button>
        </div>
    </div>
</div>

@*//MAP*@
<div id="map"></div>
<script>

    // This example creates an interactive map which constructs a polyline based on
    // user clicks. Note that the polyline only appears once its path property
    // contains two LatLng coordinates.

    var poly;
    var map;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 7,
            center: { lat: 41.879, lng: -87.624 }  // Center the map on Chicago, USA.
        });

        poly = new google.maps.Polyline({
            strokeColor: '#000000',
            strokeOpacity: 1.0,
            strokeWeight: 3
        });
        poly.setMap(map);

        // Add a listener for the click event
        map.addListener('click', addLatLng);
    }

    // Handles click events on a map, and adds a new point to the Polyline.
    function addLatLng(event) {
        var path = poly.getPath();

        // Because path is an MVCArray, we can simply append a new coordinate
        // and it will automatically appear.
        path.push(event.latLng);

        // Add a new marker at the new plotted point on the polyline.
        var marker = new google.maps.Marker({
            position: event.latLng,
            title: '#' + path.getLength(),
            map: map
        });
    }
</script>

<script async defer src="@Keys.GoogleApiKey()"></script>


